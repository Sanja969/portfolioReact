{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { fetchQuoteSuccess, fetchQuoteFailed } from './quotes.actions';\nimport { QUOTES_ACTION_TYPES } from './quotes.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\nconst url = `${baseUrl}/quotes`;\nconst getQuote = async () => {\n  const response = await fetch(url);\n  const json = await response.json();\n  localStorage.setItem('quote', json.text);\n  return await json;\n};\nexport function* fetchQuoteAsync() {\n  try {\n    const quotesArray = yield call(getQuote, 'Quotes');\n    yield put(fetchQuoteSuccess(quotesArray));\n  } catch (error) {\n    yield put(fetchQuoteFailed(error));\n  }\n}\nexport function* onFetchQuote() {\n  yield takeLatest(QUOTES_ACTION_TYPES.FETCH_QUOTE_START, fetchQuoteAsync);\n}\nexport function* quotesSaga() {\n  yield all([call(onFetchQuote)]);\n}","map":{"version":3,"names":["takeLatest","all","call","put","fetchQuoteSuccess","fetchQuoteFailed","QUOTES_ACTION_TYPES","axios","baseUrl","url","getQuote","response","fetch","json","localStorage","setItem","text","fetchQuoteAsync","quotesArray","error","onFetchQuote","FETCH_QUOTE_START","quotesSaga"],"sources":["/Users/sanjamandic/Desktop/react/portfolioReact/src/redux/quotes/quotes.saga.js"],"sourcesContent":["import {\n  takeLatest, all, call, put,\n} from 'redux-saga/effects';\nimport { \n  fetchQuoteSuccess,\n  fetchQuoteFailed,\n} from './quotes.actions';\nimport { QUOTES_ACTION_TYPES } from './quotes.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\n\nconst url = `${baseUrl}/quotes`\n\nconst getQuote = async() => {\n  const response = await fetch(url);\n  const json = await response.json()\n  localStorage.setItem('quote', json.text);\n  return await json;\n}\nexport function* fetchQuoteAsync() {\n  try {\n    const quotesArray = yield call(getQuote, 'Quotes');\n    yield put(fetchQuoteSuccess(quotesArray));\n  } catch (error) {\n    yield put(fetchQuoteFailed(error));\n  }\n}\n\nexport function* onFetchQuote() {\n  yield takeLatest(QUOTES_ACTION_TYPES.FETCH_QUOTE_START, fetchQuoteAsync);\n}\n\nexport function* quotesSaga() {\n  yield all([call(onFetchQuote)]);\n}\n"],"mappings":"AAAA,SACEA,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QACrB,oBAAoB;AAC3B,SACEC,iBAAiB,EACjBC,gBAAgB,QACX,kBAAkB;AACzB,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,SAAS;AAEjC,MAAMC,GAAG,GAAI,GAAED,OAAQ,SAAQ;AAE/B,MAAME,QAAQ,GAAG,YAAW;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;EACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;EAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,IAAI,CAAC;EACxC,OAAO,MAAMH,IAAI;AACnB,CAAC;AACD,OAAO,UAAUI,eAAe,GAAG;EACjC,IAAI;IACF,MAAMC,WAAW,GAAG,MAAMhB,IAAI,CAACQ,QAAQ,EAAE,QAAQ,CAAC;IAClD,MAAMP,GAAG,CAACC,iBAAiB,CAACc,WAAW,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMhB,GAAG,CAACE,gBAAgB,CAACc,KAAK,CAAC,CAAC;EACpC;AACF;AAEA,OAAO,UAAUC,YAAY,GAAG;EAC9B,MAAMpB,UAAU,CAACM,mBAAmB,CAACe,iBAAiB,EAAEJ,eAAe,CAAC;AAC1E;AAEA,OAAO,UAAUK,UAAU,GAAG;EAC5B,MAAMrB,GAAG,CAAC,CAACC,IAAI,CAACkB,YAAY,CAAC,CAAC,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}