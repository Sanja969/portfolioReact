{"ast":null,"code":"var _jsxFileName = \"/Users/sanjamandic/Desktop/react/portfolioReact/src/routes/projects/projects.component.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ProjectsContainer, ProjectContainer, ProjectSubContainer, ImageContainer, SubContainer } from './projects.styles';\nimport { getProjects, selectProjectsIsLoading } from '../../redux/projects/projects.selector';\nimport Spinner from '../../components/spinner/spinner.component';\nimport Footer from '../../components/footer/footer.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Buffer = require('buffer/').Buffer;\nconst Projects = () => {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(loginAuth);\n  const projects = useSelector(getProjects);\n  const isLoader = useSelector(selectProjectsIsLoading);\n  return isLoader ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 16\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \">> PROJECTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectSubContainer, {\n        children: Object.keys(projects).map(projectNumber => {\n          const project = projects[projectNumber];\n          let base64String = Buffer.from(project.img.data.data).toString('base64');\n          const imgSource = `data:image/png;base64,${base64String}`;\n          return /*#__PURE__*/_jsxDEV(ProjectContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SubContainer, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [project.name, /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: project.live,\n                  children: \"Live\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this), !token || token !== 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => dispatch(deleteProjectStart({\n                    projectNumber,\n                    token\n                  })),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 45\n                }, this) : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: project.source,\n                children: \">> More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SubContainer, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(ImageContainer, {\n                  style: {\n                    background: `url(${imgSource})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: project.description.slice(0, 100) + \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: project.technologies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, projectNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Projects, \"aZrez11lbG4h5mF+XNE8hJK+eBg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["useSelector","useDispatch","ProjectsContainer","ProjectContainer","ProjectSubContainer","ImageContainer","SubContainer","getProjects","selectProjectsIsLoading","Spinner","Footer","Buffer","require","Projects","dispatch","token","loginAuth","projects","isLoader","Object","keys","map","projectNumber","project","base64String","from","img","data","toString","imgSource","name","live","deleteProjectStart","source","background","description","slice","technologies"],"sources":["/Users/sanjamandic/Desktop/react/portfolioReact/src/routes/projects/projects.component.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { ProjectsContainer, ProjectContainer, ProjectSubContainer, ImageContainer, SubContainer } from './projects.styles';\nimport { getProjects, selectProjectsIsLoading } from '../../redux/projects/projects.selector';\nimport Spinner from '../../components/spinner/spinner.component';\nimport Footer from '../../components/footer/footer.component';\n\nconst Buffer = require('buffer/').Buffer\n\nconst Projects = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(loginAuth);\n  const projects = useSelector(getProjects);\n  const isLoader = useSelector(selectProjectsIsLoading); \n\n  return (\n    isLoader ? <Spinner /> :\n    <>\n      <ProjectsContainer>\n        <h2>&gt;&gt; PROJECTS</h2>\n        <ProjectSubContainer>\n\n          {\n          Object.keys(projects).map(projectNumber => {\n            const project = projects[projectNumber]\n            let base64String = Buffer.from(project.img.data.data).toString('base64');\n            const imgSource = `data:image/png;base64,${base64String}`;\n            return (\n            <ProjectContainer key={projectNumber}>\n              <SubContainer>\n                <h3>\n                  {project.name}\n                  <a href={project.live}>Live</a>\n                  {\n                    !token || token !== 1 ? <button onClick={() => dispatch(deleteProjectStart({projectNumber, token}))}>Delete</button> : ''\n                  }\n                  \n                </h3>\n                <a href={project.source}>&gt;&gt; More</a>\n              </SubContainer>\n              <SubContainer>\n                <div>\n                  <ImageContainer style={{background: `url(${imgSource})` }}></ImageContainer>\n                </div>\n\n                <p>{project.description.slice(0, 100) + \"...\"}</p>\n                <p>{project.technologies}</p>\n              </SubContainer>\n            </ProjectContainer>\n          )})\n          }\n        </ProjectSubContainer>\n      </ProjectsContainer>\n      <Footer />\n    </>\n    \n\n\n  );\n}\n\nexport default Projects;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,cAAc,EAAEC,YAAY,QAAQ,mBAAmB;AAC1H,SAASC,WAAW,EAAEC,uBAAuB,QAAQ,wCAAwC;AAC7F,OAAOC,OAAO,MAAM,4CAA4C;AAChE,OAAOC,MAAM,MAAM,0CAA0C;AAAC;AAAA;AAE9D,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC,CAACD,MAAM;AAExC,MAAME,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAMc,KAAK,GAAGf,WAAW,CAACgB,SAAS,CAAC;EACpC,MAAMC,QAAQ,GAAGjB,WAAW,CAACO,WAAW,CAAC;EACzC,MAAMW,QAAQ,GAAGlB,WAAW,CAACQ,uBAAuB,CAAC;EAErD,OACEU,QAAQ,gBAAG,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAG,gBACtB;IAAA,wBACE,QAAC,iBAAiB;MAAA,wBAChB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1B,QAAC,mBAAmB;QAAA,UAGlBC,MAAM,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,GAAG,CAACC,aAAa,IAAI;UACzC,MAAMC,OAAO,GAAGN,QAAQ,CAACK,aAAa,CAAC;UACvC,IAAIE,YAAY,GAAGb,MAAM,CAACc,IAAI,CAACF,OAAO,CAACG,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC;UACxE,MAAMC,SAAS,GAAI,yBAAwBL,YAAa,EAAC;UACzD,oBACA,QAAC,gBAAgB;YAAA,wBACf,QAAC,YAAY;cAAA,wBACX;gBAAA,WACGD,OAAO,CAACO,IAAI,eACb;kBAAG,IAAI,EAAEP,OAAO,CAACQ,IAAK;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAS,EAE7B,CAAChB,KAAK,IAAIA,KAAK,KAAK,CAAC,gBAAG;kBAAQ,OAAO,EAAE,MAAMD,QAAQ,CAACkB,kBAAkB,CAAC;oBAACV,aAAa;oBAAEP;kBAAK,CAAC,CAAC,CAAE;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAgB,GAAG,EAAE;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAGxH,eACL;gBAAG,IAAI,EAAEQ,OAAO,CAACU,MAAO;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAkB;YAAA;cAAA;cAAA;cAAA;YAAA,QAC7B,eACf,QAAC,YAAY;cAAA,wBACX;gBAAA,uBACE,QAAC,cAAc;kBAAC,KAAK,EAAE;oBAACC,UAAU,EAAG,OAAML,SAAU;kBAAG;gBAAE;kBAAA;kBAAA;kBAAA;gBAAA;cAAkB;gBAAA;gBAAA;gBAAA;cAAA,QACxE,eAEN;gBAAA,UAAIN,OAAO,CAACY,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eAClD;gBAAA,UAAIb,OAAO,CAACc;cAAY;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QAChB;UAAA,GAnBMf,aAAa;YAAA;YAAA;YAAA;UAAA,QAoBjB;QACpB,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACpB,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACT;AAKP,CAAC;AAAA,GAlDKT,QAAQ;EAAA,QACKZ,WAAW,EACdD,WAAW,EACRA,WAAW,EACXA,WAAW;AAAA;AAAA,KAJxBa,QAAQ;AAoDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}