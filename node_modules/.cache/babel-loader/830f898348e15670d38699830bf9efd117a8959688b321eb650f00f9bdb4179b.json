{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { loginSuccess, loginFailed } from './users.actions';\nimport { USERS_ACTION_TYPES } from './users.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\nconst url = `${baseUrl}/admin/login`;\nconst login = async user => {\n  const response = axios.post(url, user, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  response.then(data => {\n    localStorage.setItem('token', JSON.stringify(data.data.token));\n  });\n  return await response;\n};\nexport function loginAsync(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const userSaved = yield call(login, payload);\n      yield put(loginSuccess(userSaved));\n    } catch (error) {\n      yield put(loginFailed(error));\n    }\n  }();\n}\nexport function* onLogin() {\n  yield takeLatest(USERS_ACTION_TYPES.LOGIN_START, loginAsync);\n}\nexport function* usersSaga() {\n  yield all([call(onLogin)]);\n}","map":{"version":3,"names":["takeLatest","all","call","put","loginSuccess","loginFailed","USERS_ACTION_TYPES","axios","baseUrl","url","login","user","response","post","headers","then","data","localStorage","setItem","JSON","stringify","token","loginAsync","payload","userSaved","error","onLogin","LOGIN_START","usersSaga"],"sources":["/Users/sanjamandic/Desktop/react/portfolioReact/src/redux/user/users.saga.js"],"sourcesContent":["import {\n  takeLatest, all, call, put,\n} from 'redux-saga/effects';\nimport { \n  loginSuccess,\n  loginFailed,\n} from './users.actions';\nimport { USERS_ACTION_TYPES } from './users.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\n\nconst url = `${baseUrl}/admin/login`\n\nconst login = async (user) => {\n  const response = axios.post(url, user,\n      { headers: {'Content-Type': 'application/json'}},\n    );\n  response.then((data) => {localStorage.setItem('token', JSON.stringify(data.data.token))})\n\n  return await response;\n}\n\nexport function* loginAsync({payload}) {\n  try {\n    const userSaved = yield call(login, payload);\n    yield put(loginSuccess(userSaved));\n  } catch (error) {\n    yield put(loginFailed(error));\n  }\n}\n\nexport function* onLogin() {\n  yield takeLatest(USERS_ACTION_TYPES.LOGIN_START, loginAsync);\n}\n\nexport function* usersSaga() {\n  yield all([call(onLogin)]);\n}\n"],"mappings":"AAAA,SACEA,UAAU,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,QACrB,oBAAoB;AAC3B,SACEC,YAAY,EACZC,WAAW,QACN,iBAAiB;AACxB,SAASC,kBAAkB,QAAQ,eAAe;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,SAAS;AAEjC,MAAMC,GAAG,GAAI,GAAED,OAAQ,cAAa;AAEpC,MAAME,KAAK,GAAG,MAAOC,IAAI,IAAK;EAC5B,MAAMC,QAAQ,GAAGL,KAAK,CAACM,IAAI,CAACJ,GAAG,EAAEE,IAAI,EACjC;IAAEG,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB;EAAC,CAAC,CACjD;EACHF,QAAQ,CAACG,IAAI,CAAEC,IAAI,IAAK;IAACC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAACA,IAAI,CAACK,KAAK,CAAC,CAAC;EAAA,CAAC,CAAC;EAEzF,OAAO,MAAMT,QAAQ;AACvB,CAAC;AAED,OAAO,SAAUU,UAAU;EAAA,IAAC;IAACC;EAAO,CAAC;EAAA,oBAAE;IACrC,IAAI;MACF,MAAMC,SAAS,GAAG,MAAMtB,IAAI,CAACQ,KAAK,EAAEa,OAAO,CAAC;MAC5C,MAAMpB,GAAG,CAACC,YAAY,CAACoB,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMtB,GAAG,CAACE,WAAW,CAACoB,KAAK,CAAC,CAAC;IAC/B;EACF,CAAC;AAAA;AAED,OAAO,UAAUC,OAAO,GAAG;EACzB,MAAM1B,UAAU,CAACM,kBAAkB,CAACqB,WAAW,EAAEL,UAAU,CAAC;AAC9D;AAEA,OAAO,UAAUM,SAAS,GAAG;EAC3B,MAAM3B,GAAG,CAAC,CAACC,IAAI,CAACwB,OAAO,CAAC,CAAC,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}