{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { fetchBlogsSuccess, fetchBlogsFailed, postBlogSuccess } from './blogs.actions';\nimport { BLOGS_ACTION_TYPES } from './blogs.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\nconst url = `${baseUrl}/blogs`;\nconst getBlogs = async () => {\n  const response = await fetch(url);\n  return await response.json();\n};\nexport function* fetchBlogsAsync() {\n  console.log(url);\n  try {\n    const blogsArray = yield call(getBlogs, 'blogs');\n    yield put(fetchBlogsSuccess(blogsArray));\n  } catch (error) {\n    yield put(fetchBlogsFailed(error));\n  }\n}\nexport function* onFetchBlogs() {\n  yield takeLatest(BLOGS_ACTION_TYPES.FETCH_BLOGS_START, fetchBlogsAsync);\n}\nconst saveBlog = async payload => {\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(payload.blog),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${payload.token}`\n    }\n  });\n  return await response.json();\n};\nexport function saveBlogAsync(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const blogSaved = yield call(saveBlog, payload);\n      yield put(postBlogSuccess(blogSaved));\n    } catch (error) {\n      yield put(postBlogFailed(error));\n    }\n  }();\n}\nexport function* onPostBlog() {\n  yield takeLatest(BLOGS_ACTION_TYPES.POST_BLOG_START, saveBlogAsync);\n}\nconst deleteBlog = async payload => {\n  const response = await fetch(`${url}/${payload.blogNumber}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${payload.token}`\n    }\n  });\n  return await response.json();\n};\nexport function deleteBlogAsync(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    try {\n      const BlogSaved = yield call(deleteBlog, payload);\n      yield put(deleteBlogSuccess(BlogSaved));\n    } catch (error) {\n      yield put(deleteBlogFailed(error));\n    }\n  }();\n}\nexport function* blogsSaga() {\n  yield all([call(onFetchBlogs)]);\n}","map":{"version":3,"names":["takeLatest","all","call","put","fetchBlogsSuccess","fetchBlogsFailed","postBlogSuccess","BLOGS_ACTION_TYPES","axios","baseUrl","url","getBlogs","response","fetch","json","fetchBlogsAsync","console","log","blogsArray","error","onFetchBlogs","FETCH_BLOGS_START","saveBlog","payload","method","body","JSON","stringify","blog","headers","token","saveBlogAsync","blogSaved","postBlogFailed","onPostBlog","POST_BLOG_START","deleteBlog","blogNumber","deleteBlogAsync","BlogSaved","deleteBlogSuccess","deleteBlogFailed","blogsSaga"],"sources":["/Users/sanjamandic/Desktop/react/portfolioReact/src/redux/blogs/blogs.saga.js"],"sourcesContent":["import {\n  takeLatest, all, call, put,\n} from 'redux-saga/effects';\nimport { \n  fetchBlogsSuccess,\n  fetchBlogsFailed,\n  postBlogSuccess,\n} from './blogs.actions';\nimport { BLOGS_ACTION_TYPES } from './blogs.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\n\nconst url = `${baseUrl}/blogs`\n\nconst getBlogs = async() => {\n  const response = await fetch(url);\n  return await response.json();\n}\nexport function* fetchBlogsAsync() {\n  console.log(url)\n  try {\n    const blogsArray = yield call(getBlogs, 'blogs');\n    yield put(fetchBlogsSuccess(blogsArray));\n  } catch (error) {\n    yield put(fetchBlogsFailed(error));\n  }\n}\n\nexport function* onFetchBlogs() {\n  yield takeLatest(BLOGS_ACTION_TYPES.FETCH_BLOGS_START, fetchBlogsAsync);\n}\n\nconst saveBlog = async (payload) => {\n  const response = await fetch(url,\n      {\n        method: 'POST',\n        body: JSON.stringify(payload.blog),\n        headers: {'Content-Type': 'application/json', 'Authorization': `Bearer ${payload.token}`}},\n    );\n    return await response.json();\n}\n\nexport function* saveBlogAsync({payload}) {\n  try {\n    const blogSaved = yield call(saveBlog, payload);\n    yield put(postBlogSuccess(blogSaved));\n  } catch (error) {\n    yield put(postBlogFailed(error));\n  }\n}\n\nexport function* onPostBlog() {\n  yield takeLatest(BLOGS_ACTION_TYPES.POST_BLOG_START, saveBlogAsync);\n}\n\nconst deleteBlog = async (payload) => {\n  const response = await fetch(`${url}/${payload.blogNumber}`,\n  {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json', 'Authorization': `Bearer ${payload.token}`\n    },\n  }\n  )\n  return await response.json();\n}\n\nexport function* deleteBlogAsync({payload}) {\n  try {\n    const BlogSaved = yield call(deleteBlog, payload);\n    yield put(deleteBlogSuccess(BlogSaved));\n  } catch (error) {\n    yield put(deleteBlogFailed(error));\n  }\n}\n\n\nexport function* blogsSaga() {\n  yield all([call(onFetchBlogs)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}