{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { fetchProjectsSuccess, fetchProjectsFailed } from './projects.actions';\nimport { PROJECTS_ACTION_TYPES } from './projects.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\nconst url = `${baseUrl}/projects`;\nconst getProjects = async () => {\n  const response = await fetch(url);\n  return await response.json();\n};\nexport function* fetchProjectsAsync() {\n  try {\n    const projectsArray = yield call(getProjects, 'projects');\n    yield put(fetchProjectsSuccess(projectsArray));\n  } catch (error) {\n    yield put(fetchProjectsFailed(error));\n  }\n}\nexport function* onFetchProjects() {\n  yield takeLatest(PROJECTS_ACTION_TYPES.FETCH_PROJECTS_START, fetchProjectsAsync);\n}\nconst saveProject = async payload => {\n  const formData = new FormData();\n  formData.append('image', payload.project.img);\n  Object.keys(payload.project).forEach(data => {\n    if (payload.project[data] !== payload.project.img) {\n      formData.append(data, payload.project[data]);\n    }\n  });\n  axios.post(url, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Authorization': `Bearer ${payload.token}`\n    }\n  });\n};\nexport function saveProjectAsync(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      const projectSaved = yield call(saveProject, payload);\n      yield put(postProjectSuccess(projectSaved));\n    } catch (error) {\n      yield put(postProjectFailed(error));\n    }\n  }();\n}\nexport function* onPostProject() {\n  yield takeLatest(PROJECTS_ACTION_TYPES.POST_PROJECT_START, saveProjectAsync);\n}\nconst deleteProject = async payload => {\n  const response = await fetch(`${url}/${payload.projectNumber}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${payload.token}`\n    }\n  });\n  return await response.json();\n};\nexport function* projectsSaga() {\n  yield all([call(onFetchProjects), call(onPostProject), call(onDeleteProject)]);\n}","map":{"version":3,"names":["takeLatest","all","call","put","fetchProjectsSuccess","fetchProjectsFailed","PROJECTS_ACTION_TYPES","axios","baseUrl","url","getProjects","response","fetch","json","fetchProjectsAsync","projectsArray","error","onFetchProjects","FETCH_PROJECTS_START","saveProject","payload","formData","FormData","append","project","img","Object","keys","forEach","data","post","headers","token","saveProjectAsync","projectSaved","postProjectSuccess","postProjectFailed","onPostProject","POST_PROJECT_START","deleteProject","projectNumber","method","projectsSaga","onDeleteProject"],"sources":["/Users/sanjamandic/Desktop/react/portfolioReact/src/redux/projects/projects.saga.js"],"sourcesContent":["import {\n  takeLatest, all, call, put,\n} from 'redux-saga/effects';\nimport {\n  fetchProjectsSuccess, \n  fetchProjectsFailed,\n} from './projects.actions';\nimport { PROJECTS_ACTION_TYPES } from './projects.types';\nimport axios from 'axios';\nimport { baseUrl } from '../urls';\n\nconst url = `${baseUrl}/projects`\n\nconst getProjects = async() => {\n  const response = await fetch(url);\n  return await response.json();\n}\n\nexport function* fetchProjectsAsync() {\n  try {\n    const projectsArray = yield call(getProjects, 'projects');\n    yield put(fetchProjectsSuccess(projectsArray));\n  } catch (error) {\n    yield put(fetchProjectsFailed(error));\n  }\n}\n\nexport function* onFetchProjects() {\n  yield takeLatest(PROJECTS_ACTION_TYPES.FETCH_PROJECTS_START, fetchProjectsAsync);\n}\n\nconst saveProject = async (payload) => {\n  const formData = new FormData();\n  formData.append('image', payload.project.img);\n  Object.keys(payload.project).forEach(data => {\n    if(payload.project[data] !== payload.project.img) {\n      formData.append(data, payload.project[data]);\n    }\n  })\n  axios.post(url, formData,\n      { headers: {'Content-Type': 'multipart/form-data', 'Authorization': `Bearer ${payload.token}`}},\n    );\n}\n\nexport function* saveProjectAsync({payload}) {\n  try {\n    const projectSaved = yield call(saveProject, payload);\n    yield put(postProjectSuccess(projectSaved));\n  } catch (error) {\n    yield put(postProjectFailed(error));\n  }\n}\n\nexport function* onPostProject() {\n  yield takeLatest(PROJECTS_ACTION_TYPES.POST_PROJECT_START, saveProjectAsync);\n}\n\nconst deleteProject = async (payload) => {\n  const response = await fetch(`${url}/${payload.projectNumber}`,\n  {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json', 'Authorization': `Bearer ${payload.token}`\n    },\n  }\n  )\n  return await response.json();\n}\n\n\n\n\nexport function* projectsSaga() {\n  yield all([call(onFetchProjects), call(onPostProject), call(onDeleteProject)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}